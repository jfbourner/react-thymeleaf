<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.jackbourner</groupId>
	<artifactId>react-thymeleaf</artifactId>
	<version>1.0.0</version>
	<name>react-thymeleaf</name>
	<description>CV website for Jack Bourner</description>
	<properties>
		<java.version>17</java.version>
		<service.port>8080</service.port>
		<image.name>ghcr.io/jfbourner/${project.name}</image.name>
		<jkube.createExternalUrls>true</jkube.createExternalUrls>
		<jkube.skip.build>true</jkube.skip.build>
<!--		<jkube.enricher.jkube-image.pullPolicy>Always</jkube.enricher.jkube-image.pullPolicy>-->
		<cluster.issuer>local</cluster.issuer>
		<namespace>local</namespace>
		<image.tag>local</image.tag>
		<ingress.secret>dev-tls</ingress.secret>
		<host.name>localhost</host.name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jkube</groupId>
			<artifactId>kubernetes-maven-plugin</artifactId>
			<version>1.8.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<from>
						<image>registry.hub.docker.com/library/openjdk:17.0.2</image>
						<platforms>
							<platform>
								<architecture>arm64</architecture>
								<os>linux</os>
							</platform>
						</platforms>
					</from>
					<to>
						<image>${image.name}</image>
						<tags>
							<tag>${project.version}</tag>
							<tag>${image.tag}</tag>
						</tags>
					</to>
					<container>
						<environment>
							<!--suppress UnresolvedMavenProperty -->
							<MAIL_PASSWORD>${env.MAIL_PASSWORD}</MAIL_PASSWORD>
						</environment>
					</container>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
<!--							<goal>build</goal>-->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.1</version>
			</plugin>
			<!--<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>17</source>
					<target>17</target>
				</configuration>
			</plugin>-->
			<plugin>
				<groupId>org.eclipse.jkube</groupId>
				<artifactId>kubernetes-maven-plugin</artifactId>
				<version>1.8.0</version>
				<configuration>
					<namespace>${namespace}</namespace>
					<recreate>true</recreate>
					<images>
						<image>
							<name>${image.name}:${image.tag}</name>
						</image>
					</images>
					<enricher>
						<config>
							<jkube-image>
								<pullPolicy>Always</pullPolicy>
							</jkube-image>
							<jkube-healthcheck-spring-boot>
								<timeoutSecounds>60</timeoutSecounds>
								<readinessProbeInitialDelaySeconds>90</readinessProbeInitialDelaySeconds>
								<livenessProbeInitialDelaySeconds>90</livenessProbeInitialDelaySeconds>
							</jkube-healthcheck-spring-boot>
						</config>
					</enricher>
					<resources>
						<ingress>
							<ingressTlsConfigs>
								<ingressTlsConfig>
									<hosts>
										<host>${host.name}</host>
									</hosts>
									<secretName>${ingress.secret}</secretName>
								</ingressTlsConfig>
							</ingressTlsConfigs>
							<ingressRules>
								<ingressRule>
									<host>${host.name}</host>
									<paths>
										<path>
											<pathType>Prefix</pathType>
											<path>/</path>
											<serviceName>${project.name}</serviceName>
											<servicePort>${service.port}</servicePort>
										</path>
									</paths>
								</ingressRule>
							</ingressRules>
						</ingress>
						<services>
							<service>
								<name>${project.name}</name>
								<type>ClusterIP</type>
								<ports>
									<port>
										<name>http</name>
										<protocol>tcp</protocol>
										<port>${service.port}</port>
										<targetPort>${service.port}</targetPort>
									</port>
								</ports>
							</service>
						</services>
						<annotations>
							<all>
								<version>${project.version}</version>
								<artifactId>${project.artifactId}</artifactId>
							</all>
						</annotations>
					</resources>
					<generator>
						<excludes>
							<exclude>spring-boot</exclude>
						</excludes>
					</generator>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<cluster.issuer>letsencrypt-dev</cluster.issuer>
				<namespace>development</namespace>
				<image.tag>dev</image.tag>
				<ingress.secret>dev-tls</ingress.secret>
				<host.name>dev.jackbourner.co.uk</host.name>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<cluster.issuer>letsencrypt-prod</cluster.issuer>
				<namespace>production</namespace>
				<image.tag>prod</image.tag>
				<ingress.secret>echo-tls</ingress.secret>
				<host.name>jackbourner.co.uk</host.name>
			</properties>
		</profile>
	</profiles>

</project>
