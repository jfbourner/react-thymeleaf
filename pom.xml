<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.1</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.jackbourner</groupId>
    <artifactId>react-thymeleaf</artifactId>
    <version>1.0.0</version>
    <name>react-thymeleaf</name>
    <description>CV website for Jack Bourner</description>
    <properties>
        <java.version>17</java.version>
        <service.port>8080</service.port>
        <image.name>ghcr.io/jfbourner/${project.name}-arm64</image.name>
        <jkube.createExtexrnalUrls>true</jkube.createExtexrnalUrls>
        <jkube.skip.build>true</jkube.skip.build>
        <!--		<jkube.enricher.jkube-image.pullPolicy>Always</jkube.enricher.jkube-image.pullPolicy>-->
        <cluster.issuer>local</cluster.issuer>
        <namespace>local</namespace>
        <image.tag>local</image.tag>
        <ingress.secret>dev-tls</ingress.secret>
        <host.name>localhost</host.name>
        <!--<thymeleaf.version>3.1.0.M1</thymeleaf.version>-->
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.passay</groupId>
            <artifactId>passay</artifactId>
            <version>1.6.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity6</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>1.4.13</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                    <image>
                        <builder>paketobuildpacks/builder:tiny</builder>
                        <env>
                            <BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
                                --initialize-at-build-time=org.slf4j,ch.qos.logback.core,ch.qos.logback.classic
                                --initialize-at-run-time=io.netty
                            </BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
                        </env>
                    </image>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.1</version>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jkube</groupId>
                <artifactId>kubernetes-maven-plugin</artifactId>
                <version>1.10.1</version>
                <configuration>
                    <namespace>${namespace}</namespace>
                    <recreate>true</recreate>
                    <images>
                        <image>
                            <name>${image.name}:${image.tag}</name>
                        </image>
                    </images>
                    <enricher>
                        <config>
                            <env>
                                <hello>jack</hello>
                                <CATALINA_OPTS>testr</CATALINA_OPTS>
                            </env>
                            <jkube-image>
                                <pullPolicy>Always</pullPolicy>
                            </jkube-image>
                            <jkube-healthcheck-spring-boot>
                                <timeoutSecounds>60</timeoutSecounds>
                                <readinessProbeInitialDelaySeconds>90</readinessProbeInitialDelaySeconds>
                                <livenessProbeInitialDelaySeconds>90</livenessProbeInitialDelaySeconds>
                            </jkube-healthcheck-spring-boot>
                        </config>
                    </enricher>
                    <resources>
                        <ingress>
                            <ingressTlsConfigs>
                                <ingressTlsConfig>
                                    <hosts>
                                        <host>${host.name}</host>
                                    </hosts>
                                    <secretName>${ingress.secret}</secretName>
                                </ingressTlsConfig>
                            </ingressTlsConfigs>
                            <ingressRules>
                                <ingressRule>
                                    <host>${host.name}</host>
                                    <paths>
                                        <path>
                                            <pathType>Prefix</pathType>
                                            <path>/</path>
                                            <serviceName>${project.name}</serviceName>
                                            <servicePort>${service.port}</servicePort>
                                        </path>
                                    </paths>
                                </ingressRule>
                            </ingressRules>
                        </ingress>
                        <services>
                            <service>
                                <name>${project.name}</name>
                                <type>ClusterIP</type>
                                <ports>
                                    <port>
                                        <name>http</name>
                                        <protocol>tcp</protocol>
                                        <port>${service.port}</port>
                                        <targetPort>${service.port}</targetPort>
                                    </port>
                                </ports>
                            </service>
                        </services>
                        <annotations>
                            <all>
                                <version>${project.version}</version>
                                <artifactId>${project.artifactId}</artifactId>
                            </all>
                        </annotations>
                    </resources>
                    <generator>
                        <excludes>
                            <exclude>spring-boot</exclude>
                        </excludes>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>native-arm64</id>
            <properties>
                <native-buildtools.version>0.9.9</native-buildtools.version>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <excludes>
                                <exclude>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                </exclude>
                            </excludes>
                            <docker>
                                <publishRegistry>
                                    <username>jfbourner</username>
                                    <password>${env.GHCR_TOKEN}</password>
                                </publishRegistry>
                            </docker>
                            <image>
                                <env>
                                    <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                                    <BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
                                        --initialize-at-build-time=org.slf4j,ch.qos.logback.core,ch.qos.logback.classic
                                        --initialize-at-run-time=io.netty
                                    </BP_NATIVE_IMAGE_BUILD_ARGUMENTS>
                                </env>
                                <builder>dashaun/builder:tiny</builder>
                                <name>${image.name}:${image.tag}</name>
                                <publish>true</publish>
                            </image>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <cluster.issuer>letsencrypt-dev</cluster.issuer>
                <namespace>development</namespace>
                <image.tag>dev</image.tag>
                <ingress.secret>dev-tls</ingress.secret>
                <host.name>dev.jackbourner.co.uk</host.name>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <cluster.issuer>letsencrypt-prod</cluster.issuer>
                <namespace>production</namespace>
                <image.tag>prod</image.tag>
                <ingress.secret>echo-tls</ingress.secret>
                <host.name>jackbourner.co.uk</host.name>
            </properties>
        </profile>
    </profiles>

</project>
